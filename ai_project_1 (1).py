# -*- coding: utf-8 -*-
"""AI Project 1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1eVmcKTTc6hYk99RVcTYiloQJKcH6jLKz
"""

#Import all the things
import numpy as np
np.set_printoptions(precision=2)
import matplotlib.pyplot as plt
from sklearn import datasets
from sklearn.neighbors import KNeighborsClassifier
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier
from sklearn.metrics import confusion_matrix

#load all the iris data into X and the targets into Y
iris = datasets.load_iris()
X = iris.data  
Y = iris.target

#create test train split with half data for test and half for train. with shuffling to ensure a spread of types of flowers. and stratify enables to ensure a balanced shuffle
X_train, X_test, Y_train, Y_test = train_test_split(iris.data,iris.target,test_size=.5,random_state=42,shuffle=True,stratify=iris.target)

#declare K nearest neighbor network
K=KNeighborsClassifier(n_neighbors=9)
#train the Algorithm on half of the test data
K.fit(X_train,Y_train)
#predict the target on the other half of the data
KP = K.predict(X_test)

#output results and determine % of correct predictions
print(KP == Y_test)
print("Agreement:", np.mean(KP == Y_test))
results = np.mean(KP == Y_test)


#output Which predictions it got wrong to determine what flowers are hardest to differentiate
for x in range(0,75):
  if Y_test[x] != KP[x]:
    print("Actual:",iris.target_names[Y_test[x]]," Predicted: ",iris.target_names[KP[x]])

#declare decision tree classifier
DT=DecisionTreeClassifier()
#train the decision tree 
DT.fit(X_train,Y_train)
#predict the decision tree
DT_preds = DT.predict(X_test)


#output results and determine % of correct predictions
print(DT_preds==Y_test)
print(np.mean(DT_preds==Y_test))


#output Which predictions it got wrong to determine what flowers are hardest to differentiate
for x in range(0,75):
  if Y_test[x] != DT_preds[x]:
    print("Actual:",iris.target_names[Y_test[x]]," Predicted: ",iris.target_names[DT_preds[x]])

